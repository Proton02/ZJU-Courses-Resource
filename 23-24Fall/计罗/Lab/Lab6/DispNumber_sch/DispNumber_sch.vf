////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : DispNumber_sch.vf
// /___/   /\     Timestamp : 10/26/2023 17:05:54
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family kintex7 -verilog /root/Xilinx_ISE_DS_Lin_14.7_1015_1/Lab/Lab6/DispNumber_sch/DispNumber_sch.vf -w /root/Xilinx_ISE_DS_Lin_14.7_1015_1/Lab/Lab6/DispNumber_sch/DispNumber_sch.sch
//Design Name: DispNumber_sch
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module INV4_HXILINX_DispNumber_sch (O0, O1, O2, O3, I0, I1, I2, I3);
    

   output O0;
   output O1;
   output O2;
   output O3;

   input  I0;
   input  I1;
   input  I2;
   input  I3;

assign O0 = !I0;
assign O1 = !I1;
assign O2 = !I2;
assign O3 = !I3;

endmodule
`timescale 1ns / 1ps

module MyMC14495_MUSER_DispNumber_sch(D0, 
                                      D1, 
                                      D2, 
                                      D3, 
                                      LE, 
                                      point, 
                                      a, 
                                      b, 
                                      c, 
                                      d, 
                                      e, 
                                      f, 
                                      g, 
                                      p);

    input D0;
    input D1;
    input D2;
    input D3;
    input LE;
    input point;
   output a;
   output b;
   output c;
   output d;
   output e;
   output f;
   output g;
   output p;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_14;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_24;
   wire XLXN_25;
   wire XLXN_26;
   wire XLXN_27;
   wire XLXN_28;
   wire XLXN_30;
   wire XLXN_35;
   wire XLXN_38;
   wire XLXN_47;
   wire XLXN_48;
   wire XLXN_49;
   wire XLXN_50;
   wire XLXN_51;
   wire XLXN_52;
   wire XLXN_53;
   wire XLXN_63;
   wire XLXN_64;
   wire XLXN_65;
   wire XLXN_68;
   
   AND4  XLXI_1 (.I0(XLXN_65), 
                .I1(XLXN_64), 
                .I2(D2), 
                .I3(D3), 
                .O(XLXN_1));
   AND4  XLXI_2 (.I0(D0), 
                .I1(D1), 
                .I2(D2), 
                .I3(XLXN_68), 
                .O(XLXN_2));
   AND3  XLXI_81 (.I0(XLXN_64), 
                 .I1(XLXN_63), 
                 .I2(XLXN_68), 
                 .O(XLXN_4));
   AND3  XLXI_82 (.I0(D0), 
                 .I1(D1), 
                 .I2(XLXN_68), 
                 .O(XLXN_5));
   AND3  XLXI_83 (.I0(D1), 
                 .I1(XLXN_63), 
                 .I2(XLXN_68), 
                 .O(XLXN_9));
   AND3  XLXI_84 (.I0(D0), 
                 .I1(XLXN_63), 
                 .I2(XLXN_68), 
                 .O(XLXN_10));
   AND3  XLXI_85 (.I0(D0), 
                 .I1(XLXN_64), 
                 .I2(XLXN_63), 
                 .O(XLXN_11));
   AND3  XLXI_86 (.I0(XLXN_64), 
                 .I1(D2), 
                 .I2(XLXN_68), 
                 .O(XLXN_12));
   AND2  XLXI_95 (.I0(D0), 
                 .I1(XLXN_68), 
                 .O(XLXN_14));
   AND4  XLXI_96 (.I0(XLXN_65), 
                 .I1(D1), 
                 .I2(XLXN_63), 
                 .I3(D3), 
                 .O(XLXN_16));
   AND3  XLXI_99 (.I0(D0), 
                 .I1(D1), 
                 .I2(D2), 
                 .O(XLXN_17));
   AND3  XLXI_100 (.I0(D1), 
                  .I1(D2), 
                  .I2(D3), 
                  .O(XLXN_21));
   AND4  XLXI_101 (.I0(XLXN_65), 
                  .I1(D1), 
                  .I2(XLXN_63), 
                  .I3(XLXN_68), 
                  .O(XLXN_22));
   AND3  XLXI_102 (.I0(D0), 
                  .I1(D1), 
                  .I2(D3), 
                  .O(XLXN_24));
   AND3  XLXI_103 (.I0(XLXN_65), 
                  .I1(D2), 
                  .I2(D3), 
                  .O(XLXN_25));
   AND3  XLXI_104 (.I0(XLXN_65), 
                  .I1(D1), 
                  .I2(D2), 
                  .O(XLXN_26));
   AND4  XLXI_108 (.I0(D0), 
                  .I1(XLXN_64), 
                  .I2(D2), 
                  .I3(XLXN_68), 
                  .O(XLXN_27));
   AND4  XLXI_109 (.I0(D0), 
                  .I1(D1), 
                  .I2(XLXN_63), 
                  .I3(D3), 
                  .O(XLXN_28));
   AND4  XLXI_110 (.I0(D0), 
                  .I1(XLXN_64), 
                  .I2(D2), 
                  .I3(D3), 
                  .O(XLXN_38));
   AND4  XLXI_111 (.I0(XLXN_65), 
                  .I1(XLXN_64), 
                  .I2(D2), 
                  .I3(XLXN_68), 
                  .O(XLXN_30));
   AND4  XLXI_112 (.I0(D0), 
                  .I1(XLXN_63), 
                  .I2(XLXN_64), 
                  .I3(XLXN_68), 
                  .O(XLXN_35));
   OR3  XLXI_119 (.I0(XLXN_1), 
                 .I1(XLXN_2), 
                 .I2(XLXN_4), 
                 .O(XLXN_53));
   OR4  XLXI_120 (.I0(XLXN_5), 
                 .I1(XLXN_9), 
                 .I2(XLXN_10), 
                 .I3(XLXN_38), 
                 .O(XLXN_52));
   OR3  XLXI_121 (.I0(XLXN_11), 
                 .I1(XLXN_12), 
                 .I2(XLXN_14), 
                 .O(XLXN_51));
   OR4  XLXI_122 (.I0(XLXN_16), 
                 .I1(XLXN_17), 
                 .I2(XLXN_30), 
                 .I3(XLXN_35), 
                 .O(XLXN_50));
   OR4  XLXI_123 (.I0(XLXN_24), 
                 .I1(XLXN_25), 
                 .I2(XLXN_26), 
                 .I3(XLXN_27), 
                 .O(XLXN_48));
   OR4  XLXI_124 (.I0(XLXN_28), 
                 .I1(XLXN_38), 
                 .I2(XLXN_30), 
                 .I3(XLXN_35), 
                 .O(XLXN_47));
   OR3  XLXI_125 (.I0(XLXN_21), 
                 .I1(XLXN_22), 
                 .I2(XLXN_25), 
                 .O(XLXN_49));
   INV  XLXI_126 (.I(point), 
                 .O(p));
   OR2  XLXI_127 (.I0(LE), 
                 .I1(XLXN_53), 
                 .O(g));
   OR2  XLXI_128 (.I0(LE), 
                 .I1(XLXN_52), 
                 .O(f));
   OR2  XLXI_129 (.I0(LE), 
                 .I1(XLXN_51), 
                 .O(e));
   OR2  XLXI_130 (.I0(LE), 
                 .I1(XLXN_50), 
                 .O(d));
   OR2  XLXI_131 (.I0(LE), 
                 .I1(XLXN_49), 
                 .O(c));
   OR2  XLXI_132 (.I0(LE), 
                 .I1(XLXN_48), 
                 .O(b));
   OR2  XLXI_133 (.I0(LE), 
                 .I1(XLXN_47), 
                 .O(a));
   INV  XLXI_134 (.I(D3), 
                 .O(XLXN_68));
   INV  XLXI_135 (.I(D1), 
                 .O(XLXN_64));
   INV  XLXI_138 (.I(D0), 
                 .O(XLXN_65));
   INV  XLXI_139 (.I(D2), 
                 .O(XLXN_63));
endmodule
`timescale 1ns / 1ps

module DispNumber_sch(BTN, 
                      SW, 
                      AN, 
                      SEGMENT);

    input [1:0] BTN;
    input [7:0] SW;
   output [3:0] AN;
   output [7:0] SEGMENT;
   
   
   (* HU_SET = "XLXI_3_0" *) 
   INV4_HXILINX_DispNumber_sch  XLXI_3 (.I0(SW[4]), 
                                       .I1(SW[5]), 
                                       .I2(SW[6]), 
                                       .I3(SW[7]), 
                                       .O0(AN[0]), 
                                       .O1(AN[1]), 
                                       .O2(AN[2]), 
                                       .O3(AN[3]));
   MyMC14495_MUSER_DispNumber_sch  XLXI_4 (.D0(SW[0]), 
                                          .D1(SW[1]), 
                                          .D2(SW[2]), 
                                          .D3(SW[3]), 
                                          .LE(BTN[0]), 
                                          .point(BTN[1]), 
                                          .a(SEGMENT[0]), 
                                          .b(SEGMENT[1]), 
                                          .c(SEGMENT[2]), 
                                          .d(SEGMENT[3]), 
                                          .e(SEGMENT[4]), 
                                          .f(SEGMENT[5]), 
                                          .g(SEGMENT[6]), 
                                          .p(SEGMENT[7]));
endmodule
