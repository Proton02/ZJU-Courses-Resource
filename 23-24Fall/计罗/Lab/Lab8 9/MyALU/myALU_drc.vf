////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : myALU_drc.vf
// /___/   /\     Timestamp : 11/07/2023 21:01:42
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: /opt/Xilinx/14.7/ISE_DS/ISE/bin/lin64/unwrapped/sch2hdl -intstyle ise -family kintex7 -verilog myALU_drc.vf -w /home/proton/Xilinx_ISE_DS_Lin_14.7_1015_1/Lab/Lab8/MyALU/myALU.sch
//Design Name: myALU
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module Mux4to1_sch_MUSER_myALU(I0, 
                               I1, 
                               I2, 
                               I3, 
                               s, 
                               o);

    input I0;
    input I1;
    input I2;
    input I3;
    input [1:0] s;
   output o;
   
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_24;
   wire XLXN_25;
   wire XLXN_26;
   wire XLXN_27;
   wire XLXN_29;
   wire XLXN_30;
   wire XLXN_31;
   wire XLXN_32;
   
   AND2  XLXI_1 (.I0(XLXN_8), 
                .I1(XLXN_7), 
                .O(XLXN_24));
   AND2  XLXI_2 (.I0(s[0]), 
                .I1(XLXN_7), 
                .O(XLXN_25));
   AND2  XLXI_3 (.I0(s[1]), 
                .I1(XLXN_8), 
                .O(XLXN_26));
   AND2  XLXI_4 (.I0(s[1]), 
                .I1(s[0]), 
                .O(XLXN_27));
   INV  XLXI_5 (.I(s[1]), 
               .O(XLXN_7));
   INV  XLXI_6 (.I(s[0]), 
               .O(XLXN_8));
   AND2  XLXI_7 (.I0(I0), 
                .I1(XLXN_24), 
                .O(XLXN_29));
   AND2  XLXI_8 (.I0(I1), 
                .I1(XLXN_25), 
                .O(XLXN_30));
   AND2  XLXI_9 (.I0(I2), 
                .I1(XLXN_26), 
                .O(XLXN_31));
   AND2  XLXI_10 (.I0(I3), 
                 .I1(XLXN_27), 
                 .O(XLXN_32));
   OR4  XLXI_11 (.I0(XLXN_32), 
                .I1(XLXN_31), 
                .I2(XLXN_30), 
                .I3(XLXN_29), 
                .O(o));
endmodule
`timescale 1ns / 1ps

module Mux4to1b4_MUSER_myALU(I0, 
                             I1, 
                             I2, 
                             I3, 
                             s, 
                             o);

    input [3:0] I0;
    input [3:0] I1;
    input [3:0] I2;
    input [3:0] I3;
    input [1:0] s;
   output [3:0] o;
   
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_67;
   wire XLXN_68;
   wire XLXN_69;
   wire XLXN_70;
   wire XLXN_71;
   wire XLXN_72;
   wire XLXN_73;
   wire XLXN_74;
   wire XLXN_75;
   wire XLXN_77;
   wire XLXN_78;
   wire XLXN_79;
   wire XLXN_80;
   wire XLXN_81;
   wire XLXN_82;
   wire XLXN_83;
   
   INV  XLXI_1 (.I(s[1]), 
               .O(XLXN_7));
   INV  XLXI_2 (.I(s[0]), 
               .O(XLXN_8));
   AND2  XLXI_3 (.I0(XLXN_8), 
                .I1(XLXN_7), 
                .O(XLXN_12));
   AND2  XLXI_4 (.I0(s[0]), 
                .I1(XLXN_7), 
                .O(XLXN_13));
   AND2  XLXI_5 (.I0(s[1]), 
                .I1(XLXN_8), 
                .O(XLXN_14));
   AND2  XLXI_6 (.I0(s[1]), 
                .I1(s[0]), 
                .O(XLXN_15));
   AND2  XLXI_7 (.I0(I0[0]), 
                .I1(XLXN_12), 
                .O(XLXN_67));
   AND2  XLXI_8 (.I0(I1[0]), 
                .I1(XLXN_13), 
                .O(XLXN_68));
   AND2  XLXI_9 (.I0(I2[0]), 
                .I1(XLXN_14), 
                .O(XLXN_69));
   AND2  XLXI_10 (.I0(I3[0]), 
                 .I1(XLXN_15), 
                 .O(XLXN_70));
   AND2  XLXI_11 (.I0(I0[1]), 
                 .I1(XLXN_12), 
                 .O(XLXN_71));
   AND2  XLXI_12 (.I0(I1[1]), 
                 .I1(XLXN_13), 
                 .O(XLXN_72));
   AND2  XLXI_13 (.I0(I2[1]), 
                 .I1(XLXN_14), 
                 .O(XLXN_73));
   AND2  XLXI_14 (.I0(I3[1]), 
                 .I1(XLXN_15), 
                 .O(XLXN_74));
   AND2  XLXI_15 (.I0(I0[2]), 
                 .I1(XLXN_12), 
                 .O(XLXN_75));
   AND2  XLXI_16 (.I0(I1[2]), 
                 .I1(XLXN_13), 
                 .O(XLXN_77));
   AND2  XLXI_17 (.I0(I2[2]), 
                 .I1(XLXN_14), 
                 .O(XLXN_78));
   AND2  XLXI_18 (.I0(I3[2]), 
                 .I1(XLXN_15), 
                 .O(XLXN_79));
   AND2  XLXI_19 (.I0(I0[3]), 
                 .I1(XLXN_12), 
                 .O(XLXN_80));
   AND2  XLXI_20 (.I0(I1[3]), 
                 .I1(XLXN_13), 
                 .O(XLXN_81));
   AND2  XLXI_21 (.I0(I2[3]), 
                 .I1(XLXN_14), 
                 .O(XLXN_82));
   AND2  XLXI_22 (.I0(I3[3]), 
                 .I1(XLXN_15), 
                 .O(XLXN_83));
   OR4  XLXI_23 (.I0(XLXN_70), 
                .I1(XLXN_69), 
                .I2(XLXN_68), 
                .I3(XLXN_67), 
                .O(o[0]));
   OR4  XLXI_24 (.I0(XLXN_74), 
                .I1(XLXN_73), 
                .I2(XLXN_72), 
                .I3(XLXN_71), 
                .O(o[1]));
   OR4  XLXI_25 (.I0(XLXN_79), 
                .I1(XLXN_78), 
                .I2(XLXN_77), 
                .I3(XLXN_75), 
                .O(o[2]));
   OR4  XLXI_26 (.I0(XLXN_83), 
                .I1(XLXN_82), 
                .I2(XLXN_81), 
                .I3(XLXN_80), 
                .O(o[3]));
endmodule
`timescale 1ns / 1ps

module myOr2b4_MUSER_myALU(A, 
                           B, 
                           C);

    input [3:0] A;
    input [3:0] B;
   output [3:0] C;
   
   
   OR2  XLXI_5 (.I0(B[0]), 
               .I1(A[0]), 
               .O(C[0]));
   OR2  XLXI_6 (.I0(B[1]), 
               .I1(A[1]), 
               .O(C[1]));
   OR2  XLXI_7 (.I0(B[2]), 
               .I1(A[2]), 
               .O(C[2]));
   OR2  XLXI_8 (.I0(B[3]), 
               .I1(A[3]), 
               .O(C[3]));
endmodule
`timescale 1ns / 1ps

module myAnd2b4_MUSER_myALU(A, 
                            B, 
                            C);

    input [3:0] A;
    input [3:0] B;
   output [3:0] C;
   
   
   AND2  XLXI_1 (.I0(B[0]), 
                .I1(A[0]), 
                .O(C[0]));
   AND2  XLXI_2 (.I0(B[1]), 
                .I1(A[1]), 
                .O(C[1]));
   AND2  XLXI_3 (.I0(B[2]), 
                .I1(A[2]), 
                .O(C[2]));
   AND2  XLXI_4 (.I0(B[3]), 
                .I1(A[3]), 
                .O(C[3]));
endmodule
`timescale 1ns / 1ps

module Adder1b_MUSER_myALU(A, 
                           B, 
                           C, 
                           Co, 
                           S);

    input A;
    input B;
    input C;
   output Co;
   output S;
   
   wire XLXN_1;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_10;
   
   XOR2  XLXI_1 (.I0(B), 
                .I1(A), 
                .O(XLXN_1));
   XOR2  XLXI_2 (.I0(C), 
                .I1(XLXN_1), 
                .O(S));
   AND2  XLXI_3 (.I0(B), 
                .I1(A), 
                .O(XLXN_9));
   AND2  XLXI_4 (.I0(C), 
                .I1(B), 
                .O(XLXN_8));
   AND2  XLXI_5 (.I0(C), 
                .I1(A), 
                .O(XLXN_10));
   OR3  XLXI_6 (.I0(XLXN_10), 
               .I1(XLXN_8), 
               .I2(XLXN_9), 
               .O(Co));
endmodule
`timescale 1ns / 1ps

module AddSub1b_MUSER_myALU(A, 
                            B, 
                            Ci, 
                            Ctrl, 
                            Co, 
                            S);

    input A;
    input B;
    input Ci;
    input Ctrl;
   output Co;
   output S;
   
   wire XLXN_3;
   
   Adder1b_MUSER_myALU  XLXI_1 (.A(A), 
                               .B(XLXN_3), 
                               .C(Ci), 
                               .Co(Co), 
                               .S(S));
   XOR2  XLXI_2 (.I0(Ctrl), 
                .I1(B), 
                .O(XLXN_3));
endmodule
`timescale 1ns / 1ps

module AddSub4b_MUSER_myALU(A, 
                            B, 
                            Ctrl, 
                            Co, 
                            S);

    input [3:0] A;
    input [3:0] B;
    input Ctrl;
   output Co;
   output [3:0] S;
   
   wire XLXN_24;
   wire XLXN_25;
   wire XLXN_26;
   
   AddSub1b_MUSER_myALU  XLXI_2 (.A(A[3]), 
                                .B(B[3]), 
                                .Ci(XLXN_26), 
                                .Ctrl(Ctrl), 
                                .Co(Co), 
                                .S(S[3]));
   AddSub1b_MUSER_myALU  XLXI_3 (.A(A[2]), 
                                .B(B[2]), 
                                .Ci(XLXN_25), 
                                .Ctrl(Ctrl), 
                                .Co(XLXN_26), 
                                .S(S[2]));
   AddSub1b_MUSER_myALU  XLXI_4 (.A(A[1]), 
                                .B(B[1]), 
                                .Ci(XLXN_24), 
                                .Ctrl(Ctrl), 
                                .Co(XLXN_25), 
                                .S(S[1]));
   AddSub1b_MUSER_myALU  XLXI_5 (.A(A[0]), 
                                .B(B[0]), 
                                .Ci(Ctrl), 
                                .Ctrl(Ctrl), 
                                .Co(XLXN_24), 
                                .S(S[0]));
endmodule
`timescale 1ns / 1ps

module myALU(A, 
             B, 
             S, 
             C, 
             Co);

    input [3:0] A;
    input [3:0] B;
    input [1:0] S;
   output [3:0] C;
   output Co;
   
   wire [3:0] XLXN_5;
   wire [3:0] XLXN_7;
   wire [3:0] XLXN_8;
   wire XLXN_9;
   wire XLXN_11;
   
   AddSub4b_MUSER_myALU  XLXI_1 (.A(A[3:0]), 
                                .B(B[3:0]), 
                                .Ctrl(S[0]), 
                                .Co(XLXN_9), 
                                .S(XLXN_5[3:0]));
   myAnd2b4_MUSER_myALU  XLXI_2 (.A(A[3:0]), 
                                .B(B[3:0]), 
                                .C(XLXN_8[3:0]));
   myOr2b4_MUSER_myALU  XLXI_3 (.A(A[3:0]), 
                               .B(B[3:0]), 
                               .C(XLXN_7[3:0]));
   Mux4to1b4_MUSER_myALU  XLXI_4 (.I0(XLXN_5[3:0]), 
                                 .I1(XLXN_5[3:0]), 
                                 .I2(XLXN_8[3:0]), 
                                 .I3(XLXN_7[3:0]), 
                                 .s(S[1:0]), 
                                 .o(C[3:0]));
   Mux4to1_sch_MUSER_myALU  XLXI_5 (.I0(XLXN_9), 
                                   .I1(XLXN_9), 
                                   .I2(XLXN_11), 
                                   .I3(XLXN_11), 
                                   .s(S[1:0]), 
                                   .o(Co));
   GND  XLXI_6 (.G(XLXN_11));
endmodule
