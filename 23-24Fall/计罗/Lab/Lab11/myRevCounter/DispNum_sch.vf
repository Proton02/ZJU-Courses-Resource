////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : DispNum_sch.vf
// /___/   /\     Timestamp : 11/22/2023 21:53:13
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family kintex7 -verilog /home/proton/Xilinx_ISE_DS_Lin_14.7_1015_1/Lab/Lab11/myRevCounter/DispNum_sch.vf -w /home/proton/Xilinx_ISE_DS_Lin_14.7_1015_1/Lab/Lab11/myRevCounter/DispNum_sch.sch
//Design Name: DispNum_sch
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module D2_4E_HXILINX_DispNum_sch (D0, D1, D2, D3, A0, A1, E);
    

   output D0;
   output D1;
   output D2;
   output D3;

   input  A0;
   input  A1;
   input  E;
  
   reg D0;
   reg D1;
   reg D2;
   reg D3;

      always @ (A0 or A1 or E)
      begin
         if(!E)
           {D3, D2, D1, D0} <= 4'b0000;
        else
        begin
           case({A1,A0})
             2'b00 : {D3,D2,D1,D0} <= 4'b0001;
             2'b01 : {D3,D2,D1,D0} <= 4'b0010;
             2'b10 : {D3,D2,D1,D0} <= 4'b0100;
             2'b11 : {D3,D2,D1,D0} <= 4'b1000;
          endcase
        end
     end 

endmodule
`timescale 1ns / 1ps

module MyMC14495_MUSER_DispNum_sch(D0, 
                                   D1, 
                                   D2, 
                                   D3, 
                                   LE, 
                                   point, 
                                   a, 
                                   b, 
                                   c, 
                                   d, 
                                   e, 
                                   f, 
                                   g, 
                                   p);

    input D0;
    input D1;
    input D2;
    input D3;
    input LE;
    input point;
   output a;
   output b;
   output c;
   output d;
   output e;
   output f;
   output g;
   output p;
   
   wire XLXN_18;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_32;
   wire XLXN_37;
   wire XLXN_44;
   wire XLXN_45;
   wire XLXN_46;
   wire XLXN_48;
   wire XLXN_51;
   wire XLXN_52;
   wire XLXN_53;
   wire XLXN_55;
   wire XLXN_56;
   wire XLXN_61;
   wire XLXN_64;
   wire XLXN_65;
   wire XLXN_66;
   wire XLXN_68;
   wire XLXN_73;
   wire XLXN_75;
   wire XLXN_76;
   wire XLXN_79;
   wire XLXN_82;
   wire XLXN_83;
   wire XLXN_84;
   wire XLXN_99;
   wire XLXN_100;
   wire XLXN_113;
   wire XLXN_121;
   wire XLXN_122;
   wire XLXN_133;
   
   OR2  XLXI_1 (.I0(LE), 
               .I1(XLXN_32), 
               .O(g));
   INV  XLXI_8 (.I(point), 
               .O(p));
   AND4  XLXI_12 (.I0(XLXN_133), 
                 .I1(XLXN_122), 
                 .I2(D2), 
                 .I3(D3), 
                 .O(XLXN_18));
   AND4  XLXI_13 (.I0(D0), 
                 .I1(D1), 
                 .I2(D2), 
                 .I3(XLXN_113), 
                 .O(XLXN_22));
   AND3  XLXI_14 (.I0(XLXN_122), 
                 .I1(XLXN_121), 
                 .I2(XLXN_113), 
                 .O(XLXN_23));
   OR3  XLXI_15 (.I0(XLXN_18), 
                .I1(XLXN_22), 
                .I2(XLXN_23), 
                .O(XLXN_32));
   OR2  XLXI_16 (.I0(LE), 
                .I1(XLXN_37), 
                .O(f));
   OR4  XLXI_18 (.I0(XLXN_44), 
                .I1(XLXN_45), 
                .I2(XLXN_46), 
                .I3(XLXN_84), 
                .O(XLXN_37));
   AND3  XLXI_19 (.I0(D0), 
                 .I1(D1), 
                 .I2(XLXN_113), 
                 .O(XLXN_44));
   AND3  XLXI_20 (.I0(D1), 
                 .I1(XLXN_121), 
                 .I2(XLXN_113), 
                 .O(XLXN_45));
   AND3  XLXI_21 (.I0(D0), 
                 .I1(XLXN_121), 
                 .I2(XLXN_113), 
                 .O(XLXN_46));
   OR2  XLXI_22 (.I0(LE), 
                .I1(XLXN_48), 
                .O(e));
   OR3  XLXI_23 (.I0(XLXN_51), 
                .I1(XLXN_52), 
                .I2(XLXN_53), 
                .O(XLXN_48));
   AND3  XLXI_24 (.I0(D0), 
                 .I1(XLXN_122), 
                 .I2(XLXN_121), 
                 .O(XLXN_51));
   AND3  XLXI_25 (.I0(XLXN_122), 
                 .I1(D2), 
                 .I2(XLXN_113), 
                 .O(XLXN_52));
   OR2  XLXI_27 (.I0(LE), 
                .I1(XLXN_55), 
                .O(d));
   OR4  XLXI_28 (.I0(XLXN_56), 
                .I1(XLXN_61), 
                .I2(XLXN_99), 
                .I3(XLXN_100), 
                .O(XLXN_55));
   AND2  XLXI_29 (.I0(D0), 
                 .I1(XLXN_113), 
                 .O(XLXN_53));
   AND4  XLXI_30 (.I0(XLXN_133), 
                 .I1(D1), 
                 .I2(XLXN_121), 
                 .I3(D3), 
                 .O(XLXN_56));
   AND3  XLXI_31 (.I0(D0), 
                 .I1(D1), 
                 .I2(D2), 
                 .O(XLXN_61));
   OR2  XLXI_32 (.I0(LE), 
                .I1(XLXN_64), 
                .O(c));
   OR3  XLXI_33 (.I0(XLXN_65), 
                .I1(XLXN_66), 
                .I2(XLXN_73), 
                .O(XLXN_64));
   AND3  XLXI_34 (.I0(D1), 
                 .I1(D2), 
                 .I2(D3), 
                 .O(XLXN_65));
   AND4  XLXI_35 (.I0(XLXN_133), 
                 .I1(D1), 
                 .I2(XLXN_121), 
                 .I3(XLXN_113), 
                 .O(XLXN_66));
   OR2  XLXI_36 (.I0(LE), 
                .I1(XLXN_68), 
                .O(b));
   OR4  XLXI_37 (.I0(XLXN_75), 
                .I1(XLXN_73), 
                .I2(XLXN_76), 
                .I3(XLXN_79), 
                .O(XLXN_68));
   AND3  XLXI_38 (.I0(D0), 
                 .I1(D1), 
                 .I2(D3), 
                 .O(XLXN_75));
   AND3  XLXI_39 (.I0(XLXN_133), 
                 .I1(D2), 
                 .I2(D3), 
                 .O(XLXN_73));
   AND3  XLXI_40 (.I0(XLXN_133), 
                 .I1(D1), 
                 .I2(D2), 
                 .O(XLXN_76));
   AND4  XLXI_41 (.I0(D0), 
                 .I1(XLXN_122), 
                 .I2(D2), 
                 .I3(XLXN_113), 
                 .O(XLXN_79));
   OR2  XLXI_42 (.I0(LE), 
                .I1(XLXN_82), 
                .O(a));
   OR4  XLXI_43 (.I0(XLXN_83), 
                .I1(XLXN_84), 
                .I2(XLXN_99), 
                .I3(XLXN_100), 
                .O(XLXN_82));
   AND4  XLXI_44 (.I0(D0), 
                 .I1(D1), 
                 .I2(XLXN_121), 
                 .I3(D3), 
                 .O(XLXN_83));
   AND4  XLXI_45 (.I0(D0), 
                 .I1(XLXN_122), 
                 .I2(D2), 
                 .I3(D3), 
                 .O(XLXN_84));
   AND4  XLXI_46 (.I0(XLXN_133), 
                 .I1(XLXN_122), 
                 .I2(D2), 
                 .I3(XLXN_113), 
                 .O(XLXN_99));
   AND4  XLXI_47 (.I0(D0), 
                 .I1(XLXN_121), 
                 .I2(XLXN_122), 
                 .I3(XLXN_113), 
                 .O(XLXN_100));
   INV  XLXI_48 (.I(D3), 
                .O(XLXN_113));
   INV  XLXI_49 (.I(D2), 
                .O(XLXN_121));
   INV  XLXI_50 (.I(D1), 
                .O(XLXN_122));
   INV  XLXI_51 (.I(D0), 
                .O(XLXN_133));
endmodule
`timescale 1ns / 1ps

module Mux4to1_sch_MUSER_DispNum_sch(I0, 
                                     I1, 
                                     I2, 
                                     I3, 
                                     s, 
                                     o);

    input I0;
    input I1;
    input I2;
    input I3;
    input [1:0] s;
   output o;
   
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_24;
   wire XLXN_25;
   wire XLXN_26;
   wire XLXN_27;
   wire XLXN_29;
   wire XLXN_30;
   wire XLXN_31;
   wire XLXN_32;
   
   AND2  XLXI_1 (.I0(XLXN_8), 
                .I1(XLXN_7), 
                .O(XLXN_24));
   AND2  XLXI_2 (.I0(s[0]), 
                .I1(XLXN_7), 
                .O(XLXN_25));
   AND2  XLXI_3 (.I0(s[1]), 
                .I1(XLXN_8), 
                .O(XLXN_26));
   AND2  XLXI_4 (.I0(s[1]), 
                .I1(s[0]), 
                .O(XLXN_27));
   INV  XLXI_5 (.I(s[1]), 
               .O(XLXN_7));
   INV  XLXI_6 (.I(s[0]), 
               .O(XLXN_8));
   AND2  XLXI_7 (.I0(I0), 
                .I1(XLXN_24), 
                .O(XLXN_29));
   AND2  XLXI_8 (.I0(I1), 
                .I1(XLXN_25), 
                .O(XLXN_30));
   AND2  XLXI_9 (.I0(I2), 
                .I1(XLXN_26), 
                .O(XLXN_31));
   AND2  XLXI_10 (.I0(I3), 
                 .I1(XLXN_27), 
                 .O(XLXN_32));
   OR4  XLXI_11 (.I0(XLXN_32), 
                .I1(XLXN_31), 
                .I2(XLXN_30), 
                .I3(XLXN_29), 
                .O(o));
endmodule
`timescale 1ns / 1ps

module Mux4to1b4_MUSER_DispNum_sch(I0, 
                                   I1, 
                                   I2, 
                                   I3, 
                                   s, 
                                   o);

    input [3:0] I0;
    input [3:0] I1;
    input [3:0] I2;
    input [3:0] I3;
    input [1:0] s;
   output [3:0] o;
   
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_67;
   wire XLXN_68;
   wire XLXN_69;
   wire XLXN_70;
   wire XLXN_71;
   wire XLXN_72;
   wire XLXN_73;
   wire XLXN_74;
   wire XLXN_75;
   wire XLXN_77;
   wire XLXN_78;
   wire XLXN_79;
   wire XLXN_80;
   wire XLXN_81;
   wire XLXN_82;
   wire XLXN_83;
   
   INV  XLXI_1 (.I(s[1]), 
               .O(XLXN_7));
   INV  XLXI_2 (.I(s[0]), 
               .O(XLXN_8));
   AND2  XLXI_3 (.I0(XLXN_8), 
                .I1(XLXN_7), 
                .O(XLXN_12));
   AND2  XLXI_4 (.I0(s[0]), 
                .I1(XLXN_7), 
                .O(XLXN_13));
   AND2  XLXI_5 (.I0(s[1]), 
                .I1(XLXN_8), 
                .O(XLXN_14));
   AND2  XLXI_6 (.I0(s[1]), 
                .I1(s[0]), 
                .O(XLXN_15));
   AND2  XLXI_7 (.I0(I0[0]), 
                .I1(XLXN_12), 
                .O(XLXN_67));
   AND2  XLXI_8 (.I0(I1[0]), 
                .I1(XLXN_13), 
                .O(XLXN_68));
   AND2  XLXI_9 (.I0(I2[0]), 
                .I1(XLXN_14), 
                .O(XLXN_69));
   AND2  XLXI_10 (.I0(I3[0]), 
                 .I1(XLXN_15), 
                 .O(XLXN_70));
   AND2  XLXI_11 (.I0(I0[1]), 
                 .I1(XLXN_12), 
                 .O(XLXN_71));
   AND2  XLXI_12 (.I0(I1[1]), 
                 .I1(XLXN_13), 
                 .O(XLXN_72));
   AND2  XLXI_13 (.I0(I2[1]), 
                 .I1(XLXN_14), 
                 .O(XLXN_73));
   AND2  XLXI_14 (.I0(I3[1]), 
                 .I1(XLXN_15), 
                 .O(XLXN_74));
   AND2  XLXI_15 (.I0(I0[2]), 
                 .I1(XLXN_12), 
                 .O(XLXN_75));
   AND2  XLXI_16 (.I0(I1[2]), 
                 .I1(XLXN_13), 
                 .O(XLXN_77));
   AND2  XLXI_17 (.I0(I2[2]), 
                 .I1(XLXN_14), 
                 .O(XLXN_78));
   AND2  XLXI_18 (.I0(I3[2]), 
                 .I1(XLXN_15), 
                 .O(XLXN_79));
   AND2  XLXI_19 (.I0(I0[3]), 
                 .I1(XLXN_12), 
                 .O(XLXN_80));
   AND2  XLXI_20 (.I0(I1[3]), 
                 .I1(XLXN_13), 
                 .O(XLXN_81));
   AND2  XLXI_21 (.I0(I2[3]), 
                 .I1(XLXN_14), 
                 .O(XLXN_82));
   AND2  XLXI_22 (.I0(I3[3]), 
                 .I1(XLXN_15), 
                 .O(XLXN_83));
   OR4  XLXI_23 (.I0(XLXN_70), 
                .I1(XLXN_69), 
                .I2(XLXN_68), 
                .I3(XLXN_67), 
                .O(o[0]));
   OR4  XLXI_24 (.I0(XLXN_74), 
                .I1(XLXN_73), 
                .I2(XLXN_72), 
                .I3(XLXN_71), 
                .O(o[1]));
   OR4  XLXI_25 (.I0(XLXN_79), 
                .I1(XLXN_78), 
                .I2(XLXN_77), 
                .I3(XLXN_75), 
                .O(o[2]));
   OR4  XLXI_26 (.I0(XLXN_83), 
                .I1(XLXN_82), 
                .I2(XLXN_81), 
                .I3(XLXN_80), 
                .O(o[3]));
endmodule
`timescale 1ns / 1ps

module DisplaySync_MUSER_DispNum_sch(Hexs, 
                                     LES, 
                                     point, 
                                     Scan, 
                                     AN, 
                                     HEX, 
                                     LE, 
                                     p);

    input [15:0] Hexs;
    input [3:0] LES;
    input [3:0] point;
    input [1:0] Scan;
   output [3:0] AN;
   output [3:0] HEX;
   output LE;
   output p;
   
   wire XLXN_24;
   wire XLXN_27;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_30;
   
   Mux4to1b4_MUSER_DispNum_sch  XLXI_1 (.I0(Hexs[3:0]), 
                                       .I1(Hexs[7:4]), 
                                       .I2(Hexs[11:8]), 
                                       .I3(Hexs[15:12]), 
                                       .s(Scan[1:0]), 
                                       .o(HEX[3:0]));
   Mux4to1_sch_MUSER_DispNum_sch  XLXI_3 (.I0(point[0]), 
                                         .I1(point[1]), 
                                         .I2(point[2]), 
                                         .I3(point[3]), 
                                         .s(Scan[1:0]), 
                                         .o(p));
   Mux4to1_sch_MUSER_DispNum_sch  XLXI_4 (.I0(LES[0]), 
                                         .I1(LES[1]), 
                                         .I2(LES[2]), 
                                         .I3(LES[3]), 
                                         .s(Scan[1:0]), 
                                         .o(LE));
   (* HU_SET = "XLXI_5_2" *) 
   D2_4E_HXILINX_DispNum_sch  XLXI_5 (.A0(Scan[0]), 
                                     .A1(Scan[1]), 
                                     .E(XLXN_24), 
                                     .D0(XLXN_27), 
                                     .D1(XLXN_28), 
                                     .D2(XLXN_29), 
                                     .D3(XLXN_30));
   VCC  XLXI_6 (.P(XLXN_24));
   INV  XLXI_7 (.I(XLXN_27), 
               .O(AN[0]));
   INV  XLXI_8 (.I(XLXN_28), 
               .O(AN[1]));
   INV  XLXI_9 (.I(XLXN_29), 
               .O(AN[2]));
   INV  XLXI_10 (.I(XLXN_30), 
                .O(AN[3]));
endmodule
`timescale 1ns / 1ps

module DispNum_sch(clk, 
                   HEXS, 
                   LES, 
                   points, 
                   RST, 
                   AN, 
                   Segment);

    input clk;
    input [15:0] HEXS;
    input [3:0] LES;
    input [3:0] points;
    input RST;
   output [3:0] AN;
   output [7:0] Segment;
   
   wire [31:0] clkd;
   wire [3:0] HEX;
   wire XLXN_15;
   wire XLXN_17;
   
   DisplaySync_MUSER_DispNum_sch  XLXI_1 (.Hexs(HEXS[15:0]), 
                                         .LES(LES[3:0]), 
                                         .point(points[3:0]), 
                                         .Scan(clkd[18:17]), 
                                         .AN(AN[3:0]), 
                                         .HEX(HEX[3:0]), 
                                         .LE(XLXN_17), 
                                         .p(XLXN_15));
   clkdiv  XLXI_2 (.clk(clk), 
                  .rst(RST), 
                  .clkdiv(clkd[31:0]));
   MyMC14495_MUSER_DispNum_sch  XLXI_3 (.D0(HEX[0]), 
                                       .D1(HEX[1]), 
                                       .D2(HEX[2]), 
                                       .D3(HEX[3]), 
                                       .LE(XLXN_17), 
                                       .point(XLXN_15), 
                                       .a(Segment[0]), 
                                       .b(Segment[1]), 
                                       .c(Segment[2]), 
                                       .d(Segment[3]), 
                                       .e(Segment[4]), 
                                       .f(Segment[5]), 
                                       .g(Segment[6]), 
                                       .p(Segment[7]));
endmodule
